/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AggregatorInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorInterface__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Detailed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Detailed__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "AdminUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdminUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "BaseAdminUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseAdminUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "BaseUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "InitializableAdminUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitializableAdminUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "InitializableUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitializableUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "UpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeabilityProxy__factory>;
    getContractFactory(
      name: "WETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH9__factory>;
    getContractFactory(
      name: "ReservesSetupHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReservesSetupHelper__factory>;
    getContractFactory(
      name: "FlashLoanReceiverBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashLoanReceiverBase__factory>;
    getContractFactory(
      name: "FlashLoanSimpleReceiverBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashLoanSimpleReceiverBase__factory>;
    getContractFactory(
      name: "IFlashLoanReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashLoanReceiver__factory>;
    getContractFactory(
      name: "IFlashLoanSimpleReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashLoanSimpleReceiver__factory>;
    getContractFactory(
      name: "IAaveIncentivesController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAaveIncentivesController__factory>;
    getContractFactory(
      name: "IAaveOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAaveOracle__factory>;
    getContractFactory(
      name: "IACLManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IACLManager__factory>;
    getContractFactory(
      name: "IAToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAToken__factory>;
    getContractFactory(
      name: "ICreditDelegationToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICreditDelegationToken__factory>;
    getContractFactory(
      name: "IDefaultInterestRateStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDefaultInterestRateStrategy__factory>;
    getContractFactory(
      name: "IDelegationToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDelegationToken__factory>;
    getContractFactory(
      name: "IERC20WithPermit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20WithPermit__factory>;
    getContractFactory(
      name: "IInitializableAToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInitializableAToken__factory>;
    getContractFactory(
      name: "IInitializableDebtToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInitializableDebtToken__factory>;
    getContractFactory(
      name: "IL2Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL2Pool__factory>;
    getContractFactory(
      name: "IPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPool__factory>;
    getContractFactory(
      name: "IPoolAddressesProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolAddressesProvider__factory>;
    getContractFactory(
      name: "IPoolAddressesProviderRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolAddressesProviderRegistry__factory>;
    getContractFactory(
      name: "IPoolConfigurator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolConfigurator__factory>;
    getContractFactory(
      name: "IPoolDataProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolDataProvider__factory>;
    getContractFactory(
      name: "IPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceOracle__factory>;
    getContractFactory(
      name: "IPriceOracleGetter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceOracleGetter__factory>;
    getContractFactory(
      name: "IPriceOracleSentinel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceOracleSentinel__factory>;
    getContractFactory(
      name: "IReserveInterestRateStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReserveInterestRateStrategy__factory>;
    getContractFactory(
      name: "IScaledBalanceToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IScaledBalanceToken__factory>;
    getContractFactory(
      name: "ISequencerOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISequencerOracle__factory>;
    getContractFactory(
      name: "IStableDebtToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStableDebtToken__factory>;
    getContractFactory(
      name: "IVariableDebtToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVariableDebtToken__factory>;
    getContractFactory(
      name: "AaveOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveOracle__factory>;
    getContractFactory(
      name: "AaveProtocolDataProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveProtocolDataProvider__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "L2Encoder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2Encoder__factory>;
    getContractFactory(
      name: "ZeroReserveInterestRateStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZeroReserveInterestRateStrategy__factory>;
    getContractFactory(
      name: "MockFlashLoanReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockFlashLoanReceiver__factory>;
    getContractFactory(
      name: "MockFlashLoanSimpleReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockFlashLoanSimpleReceiver__factory>;
    getContractFactory(
      name: "MockIncentivesController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockIncentivesController__factory>;
    getContractFactory(
      name: "MockL2Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockL2Pool__factory>;
    getContractFactory(
      name: "MockPeripheryContractV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPeripheryContractV1__factory>;
    getContractFactory(
      name: "MockPeripheryContractV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPeripheryContractV2__factory>;
    getContractFactory(
      name: "MockPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPool__factory>;
    getContractFactory(
      name: "MockPoolInherited",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPoolInherited__factory>;
    getContractFactory(
      name: "MockReserveConfiguration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockReserveConfiguration__factory>;
    getContractFactory(
      name: "SelfdestructTransfer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SelfdestructTransfer__factory>;
    getContractFactory(
      name: "MockAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockAggregator__factory>;
    getContractFactory(
      name: "PriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceOracle__factory>;
    getContractFactory(
      name: "SequencerOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SequencerOracle__factory>;
    getContractFactory(
      name: "FlashloanAttacker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashloanAttacker__factory>;
    getContractFactory(
      name: "MockReserveInterestRateStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockReserveInterestRateStrategy__factory>;
    getContractFactory(
      name: "WadRayMathWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WadRayMathWrapper__factory>;
    getContractFactory(
      name: "MintableDelegationERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableDelegationERC20__factory>;
    getContractFactory(
      name: "MintableERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC20__factory>;
    getContractFactory(
      name: "MockATokenRepayment",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockATokenRepayment__factory>;
    getContractFactory(
      name: "WETH9Mocked",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH9Mocked__factory>;
    getContractFactory(
      name: "MockAToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockAToken__factory>;
    getContractFactory(
      name: "MockInitializableFromConstructorImple",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockInitializableFromConstructorImple__factory>;
    getContractFactory(
      name: "MockInitializableImple",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockInitializableImple__factory>;
    getContractFactory(
      name: "MockInitializableImpleV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockInitializableImpleV2__factory>;
    getContractFactory(
      name: "MockReentrantInitializableImple",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockReentrantInitializableImple__factory>;
    getContractFactory(
      name: "MockStableDebtToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockStableDebtToken__factory>;
    getContractFactory(
      name: "MockVariableDebtToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockVariableDebtToken__factory>;
    getContractFactory(
      name: "ACLManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ACLManager__factory>;
    getContractFactory(
      name: "PoolAddressesProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolAddressesProvider__factory>;
    getContractFactory(
      name: "PoolAddressesProviderRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolAddressesProviderRegistry__factory>;
    getContractFactory(
      name: "PriceOracleSentinel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceOracleSentinel__factory>;
    getContractFactory(
      name: "BaseImmutableAdminUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseImmutableAdminUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "InitializableImmutableAdminUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitializableImmutableAdminUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "ReserveConfiguration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveConfiguration__factory>;
    getContractFactory(
      name: "Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Errors__factory>;
    getContractFactory(
      name: "BorrowLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BorrowLogic__factory>;
    getContractFactory(
      name: "BridgeLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BridgeLogic__factory>;
    getContractFactory(
      name: "ConfiguratorLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConfiguratorLogic__factory>;
    getContractFactory(
      name: "EModeLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EModeLogic__factory>;
    getContractFactory(
      name: "FlashLoanLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashLoanLogic__factory>;
    getContractFactory(
      name: "IsolationModeLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsolationModeLogic__factory>;
    getContractFactory(
      name: "LiquidationLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidationLogic__factory>;
    getContractFactory(
      name: "PoolLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolLogic__factory>;
    getContractFactory(
      name: "ReserveLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveLogic__factory>;
    getContractFactory(
      name: "SupplyLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SupplyLogic__factory>;
    getContractFactory(
      name: "ValidationLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ValidationLogic__factory>;
    getContractFactory(
      name: "DefaultReserveInterestRateStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DefaultReserveInterestRateStrategy__factory>;
    getContractFactory(
      name: "L2Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L2Pool__factory>;
    getContractFactory(
      name: "Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pool__factory>;
    getContractFactory(
      name: "PoolConfigurator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolConfigurator__factory>;
    getContractFactory(
      name: "AToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AToken__factory>;
    getContractFactory(
      name: "DebtTokenBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DebtTokenBase__factory>;
    getContractFactory(
      name: "EIP712Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Base__factory>;
    getContractFactory(
      name: "IncentivizedERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IncentivizedERC20__factory>;
    getContractFactory(
      name: "MintableIncentivizedERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableIncentivizedERC20__factory>;
    getContractFactory(
      name: "ScaledBalanceTokenBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScaledBalanceTokenBase__factory>;
    getContractFactory(
      name: "DelegationAwareAToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DelegationAwareAToken__factory>;
    getContractFactory(
      name: "StableDebtToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StableDebtToken__factory>;
    getContractFactory(
      name: "VariableDebtToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VariableDebtToken__factory>;

    getContractAt(
      name: "AggregatorInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorInterface>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Detailed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Detailed>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "AdminUpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AdminUpgradeabilityProxy>;
    getContractAt(
      name: "BaseAdminUpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseAdminUpgradeabilityProxy>;
    getContractAt(
      name: "BaseUpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseUpgradeabilityProxy>;
    getContractAt(
      name: "InitializableAdminUpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InitializableAdminUpgradeabilityProxy>;
    getContractAt(
      name: "InitializableUpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InitializableUpgradeabilityProxy>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "UpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeabilityProxy>;
    getContractAt(
      name: "WETH9",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH9>;
    getContractAt(
      name: "ReservesSetupHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReservesSetupHelper>;
    getContractAt(
      name: "FlashLoanReceiverBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashLoanReceiverBase>;
    getContractAt(
      name: "FlashLoanSimpleReceiverBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashLoanSimpleReceiverBase>;
    getContractAt(
      name: "IFlashLoanReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashLoanReceiver>;
    getContractAt(
      name: "IFlashLoanSimpleReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashLoanSimpleReceiver>;
    getContractAt(
      name: "IAaveIncentivesController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAaveIncentivesController>;
    getContractAt(
      name: "IAaveOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAaveOracle>;
    getContractAt(
      name: "IACLManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IACLManager>;
    getContractAt(
      name: "IAToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAToken>;
    getContractAt(
      name: "ICreditDelegationToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICreditDelegationToken>;
    getContractAt(
      name: "IDefaultInterestRateStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDefaultInterestRateStrategy>;
    getContractAt(
      name: "IDelegationToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDelegationToken>;
    getContractAt(
      name: "IERC20WithPermit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20WithPermit>;
    getContractAt(
      name: "IInitializableAToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IInitializableAToken>;
    getContractAt(
      name: "IInitializableDebtToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IInitializableDebtToken>;
    getContractAt(
      name: "IL2Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL2Pool>;
    getContractAt(
      name: "IPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPool>;
    getContractAt(
      name: "IPoolAddressesProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolAddressesProvider>;
    getContractAt(
      name: "IPoolAddressesProviderRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolAddressesProviderRegistry>;
    getContractAt(
      name: "IPoolConfigurator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolConfigurator>;
    getContractAt(
      name: "IPoolDataProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolDataProvider>;
    getContractAt(
      name: "IPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPriceOracle>;
    getContractAt(
      name: "IPriceOracleGetter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPriceOracleGetter>;
    getContractAt(
      name: "IPriceOracleSentinel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPriceOracleSentinel>;
    getContractAt(
      name: "IReserveInterestRateStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IReserveInterestRateStrategy>;
    getContractAt(
      name: "IScaledBalanceToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IScaledBalanceToken>;
    getContractAt(
      name: "ISequencerOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISequencerOracle>;
    getContractAt(
      name: "IStableDebtToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStableDebtToken>;
    getContractAt(
      name: "IVariableDebtToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVariableDebtToken>;
    getContractAt(
      name: "AaveOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveOracle>;
    getContractAt(
      name: "AaveProtocolDataProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveProtocolDataProvider>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "L2Encoder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2Encoder>;
    getContractAt(
      name: "ZeroReserveInterestRateStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZeroReserveInterestRateStrategy>;
    getContractAt(
      name: "MockFlashLoanReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockFlashLoanReceiver>;
    getContractAt(
      name: "MockFlashLoanSimpleReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockFlashLoanSimpleReceiver>;
    getContractAt(
      name: "MockIncentivesController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockIncentivesController>;
    getContractAt(
      name: "MockL2Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockL2Pool>;
    getContractAt(
      name: "MockPeripheryContractV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockPeripheryContractV1>;
    getContractAt(
      name: "MockPeripheryContractV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockPeripheryContractV2>;
    getContractAt(
      name: "MockPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockPool>;
    getContractAt(
      name: "MockPoolInherited",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockPoolInherited>;
    getContractAt(
      name: "MockReserveConfiguration",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockReserveConfiguration>;
    getContractAt(
      name: "SelfdestructTransfer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SelfdestructTransfer>;
    getContractAt(
      name: "MockAggregator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockAggregator>;
    getContractAt(
      name: "PriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceOracle>;
    getContractAt(
      name: "SequencerOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SequencerOracle>;
    getContractAt(
      name: "FlashloanAttacker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashloanAttacker>;
    getContractAt(
      name: "MockReserveInterestRateStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockReserveInterestRateStrategy>;
    getContractAt(
      name: "WadRayMathWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WadRayMathWrapper>;
    getContractAt(
      name: "MintableDelegationERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableDelegationERC20>;
    getContractAt(
      name: "MintableERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC20>;
    getContractAt(
      name: "MockATokenRepayment",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockATokenRepayment>;
    getContractAt(
      name: "WETH9Mocked",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH9Mocked>;
    getContractAt(
      name: "MockAToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockAToken>;
    getContractAt(
      name: "MockInitializableFromConstructorImple",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockInitializableFromConstructorImple>;
    getContractAt(
      name: "MockInitializableImple",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockInitializableImple>;
    getContractAt(
      name: "MockInitializableImpleV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockInitializableImpleV2>;
    getContractAt(
      name: "MockReentrantInitializableImple",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockReentrantInitializableImple>;
    getContractAt(
      name: "MockStableDebtToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockStableDebtToken>;
    getContractAt(
      name: "MockVariableDebtToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockVariableDebtToken>;
    getContractAt(
      name: "ACLManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ACLManager>;
    getContractAt(
      name: "PoolAddressesProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolAddressesProvider>;
    getContractAt(
      name: "PoolAddressesProviderRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolAddressesProviderRegistry>;
    getContractAt(
      name: "PriceOracleSentinel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceOracleSentinel>;
    getContractAt(
      name: "BaseImmutableAdminUpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseImmutableAdminUpgradeabilityProxy>;
    getContractAt(
      name: "InitializableImmutableAdminUpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InitializableImmutableAdminUpgradeabilityProxy>;
    getContractAt(
      name: "ReserveConfiguration",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveConfiguration>;
    getContractAt(
      name: "Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Errors>;
    getContractAt(
      name: "BorrowLogic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BorrowLogic>;
    getContractAt(
      name: "BridgeLogic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BridgeLogic>;
    getContractAt(
      name: "ConfiguratorLogic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ConfiguratorLogic>;
    getContractAt(
      name: "EModeLogic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EModeLogic>;
    getContractAt(
      name: "FlashLoanLogic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashLoanLogic>;
    getContractAt(
      name: "IsolationModeLogic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsolationModeLogic>;
    getContractAt(
      name: "LiquidationLogic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidationLogic>;
    getContractAt(
      name: "PoolLogic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolLogic>;
    getContractAt(
      name: "ReserveLogic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveLogic>;
    getContractAt(
      name: "SupplyLogic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SupplyLogic>;
    getContractAt(
      name: "ValidationLogic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ValidationLogic>;
    getContractAt(
      name: "DefaultReserveInterestRateStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DefaultReserveInterestRateStrategy>;
    getContractAt(
      name: "L2Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L2Pool>;
    getContractAt(
      name: "Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pool>;
    getContractAt(
      name: "PoolConfigurator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolConfigurator>;
    getContractAt(
      name: "AToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AToken>;
    getContractAt(
      name: "DebtTokenBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DebtTokenBase>;
    getContractAt(
      name: "EIP712Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Base>;
    getContractAt(
      name: "IncentivizedERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IncentivizedERC20>;
    getContractAt(
      name: "MintableIncentivizedERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableIncentivizedERC20>;
    getContractAt(
      name: "ScaledBalanceTokenBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScaledBalanceTokenBase>;
    getContractAt(
      name: "DelegationAwareAToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DelegationAwareAToken>;
    getContractAt(
      name: "StableDebtToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StableDebtToken>;
    getContractAt(
      name: "VariableDebtToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VariableDebtToken>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
