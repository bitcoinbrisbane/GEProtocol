"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockFlashLoanReceiver__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract IPoolAddressesProvider",
                name: "provider",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address[]",
                name: "_assets",
                type: "address[]",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "_amounts",
                type: "uint256[]",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "_premiums",
                type: "uint256[]",
            },
        ],
        name: "ExecutedWithFail",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address[]",
                name: "_assets",
                type: "address[]",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "_amounts",
                type: "uint256[]",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "_premiums",
                type: "uint256[]",
            },
        ],
        name: "ExecutedWithSuccess",
        type: "event",
    },
    {
        inputs: [],
        name: "ADDRESSES_PROVIDER",
        outputs: [
            {
                internalType: "contract IPoolAddressesProvider",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "POOL",
        outputs: [
            {
                internalType: "contract IPool",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "assets",
                type: "address[]",
            },
            {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]",
            },
            {
                internalType: "uint256[]",
                name: "premiums",
                type: "uint256[]",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "executeOperation",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getAmountToApprove",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amountToApprove",
                type: "uint256",
            },
        ],
        name: "setAmountToApprove",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "fail",
                type: "bool",
            },
        ],
        name: "setFailExecutionTransfer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "flag",
                type: "bool",
            },
        ],
        name: "setSimulateEOA",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "simulateEOA",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60c060405234801561001057600080fd5b50604051610bf3380380610bf383398101604081905261002f916100d8565b80806001600160a01b03166080816001600160a01b031681525050806001600160a01b031663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610088573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ac91906100d8565b6001600160a01b031660a052506100fc9050565b6001600160a01b03811681146100d557600080fd5b50565b6000602082840312156100ea57600080fd5b81516100f5816100c0565b9392505050565b60805160a051610acc6101276000396000818161014c01526104ec0152600060920152610acc6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637535d2461161005b5780637535d24614610147578063920f5c841461016e578063bf443f8514610181578063e9a6a25b1461019457600080fd5b80630542975c1461008d578063388f70f1146100de5780634444f3311461011f5780635e76bba314610136575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61011d6100ec3660046105d9565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b005b60025460ff165b60405190151581526020016100d5565b6001546040519081526020016100d5565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b61012661017c3660046107c1565b6101d3565b61011d61018f3660046108db565b600155565b61011d6101a23660046105d9565b600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6000805460ff1615610227577f9972b212e52913783072b960dd41527ae8b6e609d017b64039758dda0ce412788686866040516102129392919061092f565b60405180910390a15060025460ff16156105bf565b60005b865181101561057f576000878281518110610247576102476109b1565b60200260200101519050878281518110610263576102636109b1565b60209081029190910101516040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa1580156102d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fd91906109e0565b87838151811061030f5761030f6109b1565b60200260200101511115610383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f496e76616c69642062616c616e636520666f722074686520636f6e7472616374604482015260640160405180910390fd5b6000600154600014156103d3578683815181106103a2576103a26109b1565b60200260200101518884815181106103bc576103bc6109b1565b60200260200101516103ce9190610a28565b6103d7565b6001545b90508173ffffffffffffffffffffffffffffffffffffffff166340c10f1930898681518110610408576104086109b1565b60200260200101516040518363ffffffff1660e01b815260040161044e92919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020604051808303816000875af115801561046d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104919190610a40565b508883815181106104a4576104a46109b1565b60209081029190910101516040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018490529091169063095ea7b3906044016020604051808303816000875af1158015610545573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105699190610a40565b505050808061057790610a5d565b91505061022a565b507fbd6b6bfac59612765a81cc4fdee74ab4859671fa14a562056f9eea438735a78a8686866040516105b39392919061092f565b60405180910390a15060015b95945050505050565b80151581146105d657600080fd5b50565b6000602082840312156105eb57600080fd5b81356105f6816105c8565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610673576106736105fd565b604052919050565b600067ffffffffffffffff821115610695576106956105fd565b5060051b60200190565b803573ffffffffffffffffffffffffffffffffffffffff811681146106c357600080fd5b919050565b600082601f8301126106d957600080fd5b813560206106ee6106e98361067b565b61062c565b82815260059290921b8401810191818101908684111561070d57600080fd5b8286015b848110156107285780358352918301918301610711565b509695505050505050565b600082601f83011261074457600080fd5b813567ffffffffffffffff81111561075e5761075e6105fd565b61078f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161062c565b8181528460208386010111156107a457600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156107d957600080fd5b853567ffffffffffffffff808211156107f157600080fd5b818801915088601f83011261080557600080fd5b813560206108156106e98361067b565b82815260059290921b8401810191818101908c84111561083457600080fd5b948201945b838610156108595761084a8661069f565b82529482019490820190610839565b9950508901359250508082111561086f57600080fd5b61087b89838a016106c8565b9550604088013591508082111561089157600080fd5b61089d89838a016106c8565b94506108ab6060890161069f565b935060808801359150808211156108c157600080fd5b506108ce88828901610733565b9150509295509295909350565b6000602082840312156108ed57600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561092457815187529582019590820190600101610908565b509495945050505050565b606080825284519082018190526000906020906080840190828801845b8281101561097e57815173ffffffffffffffffffffffffffffffffffffffff168452928401929084019060010161094c565b5050508381038285015261099281876108f4565b91505082810360408401526109a781856108f4565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156109f257600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610a3b57610a3b6109f9565b500190565b600060208284031215610a5257600080fd5b81516105f6816105c8565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a8f57610a8f6109f9565b506001019056fea26469706673582212209116bfc944f2af2669ad6b5ae1e9a4eb56fb6efcead6ee567057ccfdf5c2c9fb64736f6c634300080a0033";
const isSuperArgs = (xs) => xs.length > 1;
class MockFlashLoanReceiver__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(provider, overrides) {
        return super.deploy(provider, overrides || {});
    }
    getDeployTransaction(provider, overrides) {
        return super.getDeployTransaction(provider, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockFlashLoanReceiver__factory = MockFlashLoanReceiver__factory;
MockFlashLoanReceiver__factory.bytecode = _bytecode;
MockFlashLoanReceiver__factory.abi = _abi;
